{"version":3,"sources":["services/userAPI.js","styles/loading.js","components/Loading.js","styles/login.js","pages/Login.js","styles/header.js","components/Header.js","services/searchAlbumsAPI.js","styles/search.js","pages/Search.js","styles/musicCard.js","components/MusicCard.js","services/musicsAPI.js","services/favoriteSongsAPI.js","styles/album.js","pages/Album.js","styles/favorites.js","pages/Favorites.js","styles/profile.js","pages/Profile.js","pages/ProfileEdit.js","pages/NotFound.js","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","Container","styled","h1","Loading","body","Main","main","LoadingBox","Login","useState","setName","setEmail","setImage","setDescription","loading","setLoading","autentification","setAutentification","a","to","id","type","onChange","event","target","value","maxLength","disabled","length","onClick","HeaderBox","header","Header","page","setUser","userName","useEffect","getUserName","className","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","fetch","APIResponse","json","results","map","artistId","artistName","collectionId","collectionName","collectionPrice","artworkUrl100","releaseDate","trackCount","SearchBox","div","EmptyBox","AlbunsBox","Search","inputValue","setInputValue","setArtist","artistAlbuns","setArtistAlbuns","firstSearch","setFirstSearch","result","placeholder","album","src","alt","SongBox","MusicCard","props","song","handleCheckbox","favorites","htmlFor","trackId","trackName","previewUrl","controls","kind","checked","some","music","getMusics","request","requestJson","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","removeSong","filter","s","PlayerBox","AlbumBox","SongsBox","Album","useParams","setAlbum","setFavorites","addingSong","artistViewUrl","artworkUrl30","artworkUrl60","collectionCensoredName","collectionExplicitness","collectionViewUrl","currency","discCount","discNumber","isStreamable","primaryGenreName","trackCensoredName","trackExplicitness","trackNumber","trackPrice","trackTimeMillis","trackViewUrl","wrapperType","removingSong","fetchMusic","fetchFavorites","slice","Favorites","Card","Profile","fetchUser","ProfileEdit","NotFound","App","exact","path","component","Home","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.f83c939e.chunk.js","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import styled from 'styled-components';\n\nconst Container = styled.h1`\n  color: rgb(38, 77, 38);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport default Container;\n","import React from 'react';\nimport Container from '../styles/loading';\n\nfunction Loading() {\n  return (\n    <Container>Carregando...</Container>\n  );\n}\n\nexport default Loading;\n","import styled from 'styled-components';\n\nexport const Container = styled.body`\n  height: 100vh;\n  width: 100vw;\n  background-color: #f9f9f9;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  h1 {\n    position: absolute;\n    font-weight: bolder;\n    font-size: 60px;\n    top: 5%;\n    display: inline;\n  }\n\n  p {\n    display: inline;\n    color: rgb(38, 77, 38);\n  }\n`;\n\nexport const Main = styled.main`\n  height: 60vh;\n  width: 50vw;\n  padding-top: 20px;\n  background-color: white;\n  position: absolute;\n  top: 30%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 15px;\n  border-radius: 10px;\n  box-shadow: -1px 1px 3px 3px silver;\n\n  div {\n    width: 90%;\n    height: 15%;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    \n\n    h6 {\n      font-size: smaller;\n      margin-bottom: 0 0 10px 0;\n      margin-block-start: 0;\n      margin-block-end: 10px;\n      color: rgb(38, 77, 38);\n\n    }\n\n    input {\n      font-family: Arial, Helvetica, sans-serif;\n      height: 30px;\n    }\n  }\n\n  #div-description {\n    width: 90%;\n    height: 25%;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-end;\n    \n\n    h6 {\n      font-size: smaller;\n      margin-bottom: 0 0 10px 0;\n      margin-block-start: 0;\n      margin-block-end: 10px;\n      color: rgb(38, 77, 38);\n\n    }\n\n    textarea {\n      font-family: Arial, Helvetica, sans-serif;\n      height: 80px;\n    }\n  }\n\n  \n\n  button {\n    width: 72%;\n    background-color: blue;\n    font-weight: bolder;\n    color: white;\n    box-shadow: -1px 1px 1px 2px silver;\n  }\n`;\n\nexport const LoadingBox = styled.main`\n  position: absolute;\n  top: 50%;\n  display: flex;\n  justify-content: center;\n`;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { createUser } from '../services/userAPI';\nimport Loading from '../components/Loading';\nimport { Container, Main, LoadingBox } from '../styles/login';\n\nfunction Login() {\n  const minNameLength = 3;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [image, setImage] = useState('');\n  const [description, setDescription] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [autentification, setAutentification] = useState(false);\n\n  function handleName(event) {\n    setName(event.target.value);\n  }\n\n  function handleEmail(event) {\n    setEmail(event.target.value);\n  }\n\n  function handleImage(event) {\n    setImage(event.target.value);\n  }\n\n  function handleDescription(event) {\n    setDescription(event.target.value);\n  }\n\n  async function handleClick() {\n    setLoading(true);\n    await createUser({ name, email, image, description });\n    setLoading(false);\n    setAutentification(true);\n  }\n\n  if (autentification) {\n    return (\n      <Redirect to=\"/search\" />\n    );\n  }\n\n  return (\n    <Container data-testid=\"page-login\">\n      <h1>\n        My\n        <p>T</p>\n        unes\n      </h1>\n      {loading\n        ? (\n          <LoadingBox>\n            <Loading />\n          </LoadingBox>)\n        : (\n          <Main>\n            <div>\n              <h6>Username</h6>\n              <input\n                name=\"name\"\n                id=\"name\"\n                type=\"text\"\n                data-testid=\"login-name-input\"\n                onChange={ handleName }\n              />\n            </div>\n            <div>\n              <h6>E-mail</h6>\n              <input\n                name=\"email\"\n                type=\"email\"\n                data-testid=\"login-email-input\"\n                onChange={ handleEmail }\n              />\n            </div>\n            <div>\n              <h6>Photo</h6>\n              <input\n                name=\"image\"\n                type=\"text\"\n                data-testid=\"login-image-input\"\n                onChange={ handleImage }\n              />\n            </div>\n            <div id=\"div-description\">\n              <h6>Description</h6>\n              <textarea\n                name=\"description\"\n                data-testid=\"login-text-area\"\n                maxLength=\"200\"\n                onChange={ handleDescription }\n              />\n            </div>\n            <button\n              type=\"button\"\n              data-testid=\"login-submit-button\"\n              disabled={ name.length < minNameLength }\n              onClick={ handleClick }\n            >\n              Enter\n            </button>\n          </Main>)}\n    </Container>\n  );\n}\n\nexport default Login;\n","import styled from 'styled-components';\n\nconst HeaderBox = styled.header`\n  #header-user {\n    padding: 0 50px;\n    height: 60px;\n    background-color: rgb(33, 40, 33);\n    box-shadow: 2px 2px 2px 2px rgb(33, 40, 33);\n    color: white;\n    font-weight: bolder;\n    font-size: xx-large;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n  #link {\n    text-decoration: none;\n    color: silver;\n    \n    p {\n      color: silver;\n      display: inline;\n      color: rgb(38, 77, 38);\n      \n    }\n  }\n\n    #span-user {\n      background-color: white;\n      color: rgb(11, 65, 33);\n      font-weight: 600;\n      font-size: large;\n      width: 200px;\n      height: 30px;\n      border-radius: 20px;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n\n  #nav-links {\n    height: 60px;\n    display: flex;\n    justify-content: space-around;\n\n    .links {\n      width: 33.333%;\n      background-color: rgb(11, 65, 33);\n      box-shadow: 2px 2px 2px 2px rgb(11, 65, 33);\n      color: silver;\n      font-size: 20px;\n      font-weight: 600;\n      text-decoration: none;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n\n    .actual-link {\n      width: 33.333%;\n      background-color: silver;\n      box-shadow: 2px 2px 2px 2px silver;\n      color: rgb(11, 65, 33);\n      font-size: 20px;\n      font-weight: 600;\n      text-decoration: none;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n    }\n  }\n\n`;\n\nexport default HeaderBox;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { getUser } from '../services/userAPI';\nimport Loading from './Loading';\nimport HeaderBox from '../styles/header';\n\nfunction Header({ page }) {\n  const [user, setUser] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  async function getUserName() {\n    setLoading(true);\n    const userName = await getUser();\n    setUser(userName.name);\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    getUserName();\n  }, []);\n\n  if (loading) {\n    return (\n      <Loading />\n    );\n  }\n\n  return (\n    <HeaderBox data-testid=\"header-component\">\n      <header id=\"header-user\">\n        <Link to=\"/search\" id=\"link\">\n          My\n          <p>T</p>\n          unes\n        </Link>\n        <span data-testid=\"header-user-name\" id=\"span-user\">{ user }</span>\n      </header>\n      <nav id=\"nav-links\">\n        <Link\n          to=\"/search\"\n          data-testid=\"link-to-search\"\n          // eslint-disable-next-line sonarjs/no-duplicate-string\n          className={ page === 'search' ? 'actual-link' : 'links' }\n        >\n          Search\n        </Link>\n\n        <Link\n          to=\"/favorites\"\n          data-testid=\"link-to-favorites\"\n          className={ page === 'favorites' ? 'actual-link' : 'links' }\n        >\n          Favorites\n        </Link>\n\n        <Link\n          to=\"/profile\"\n          data-testid=\"link-to-profile\"\n          className={ page === 'profile' ? 'actual-link' : 'links' }\n        >\n          Profile\n        </Link>\n      </nav>\n    </HeaderBox>\n  );\n}\n\nHeader.propTypes = {\n  page: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import styled from 'styled-components';\n\nexport const Container = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const SearchBox = styled.div`\n  margin-top: 40px;\n  margin-bottom: 40px;\n  height: 60px;\n  width: 60%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  input {\n    width: 70%;\n    height: 30px;\n    margin-right: 15px;\n  }\n\n  button {\n    height: 32px;\n    background-color: blue;\n    color: white;\n\n  }\n`;\n\nexport const LoadingBox = styled.div`\n  position: relative;\n  top: 100px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const EmptyBox = styled.h1`\n  position: relative;\n  top: 100px;\n  color: rgb(38, 77, 38);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const AlbunsBox = styled.div`\n  width: 80%;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  h3 {\n    color: rgb(38, 77, 38);\n  }\n\n  #div-albuns {\n    width: 100%;\n    display: flex;\n    gap: 40px;\n    overflow-x: scroll;\n    scroll-behavior: smooth;\n  }\n\n  #div-cards {\n    width: 100%;\n    border: 2px solid silver;\n    overflow-y: hidden;\n    color: rgb(38, 77, 38);\n    text-decoration: none;\n\n    img {\n      width: 230px;\n      height: 230px;\n    }\n\n    h4, h5 {\n      padding: 5%;\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport Loading from '../components/Loading';\nimport { Container, SearchBox, AlbunsBox, LoadingBox, EmptyBox } from '../styles/search';\n\nfunction Search() {\n  const [inputValue, setInputValue] = useState('');\n  const [artist, setArtist] = useState('');\n  const [artistAlbuns, setArtistAlbuns] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [firstSearch, setFirstSearch] = useState(false);\n\n  function handleChange(event) {\n    setInputValue(event.target.value);\n  }\n\n  async function handleClick() {\n    setLoading(true);\n    setFirstSearch(true);\n    const result = await searchAlbumsAPI(inputValue);\n    setArtist(inputValue);\n    setInputValue('');\n    setArtistAlbuns(result);\n    setLoading(false);\n  }\n\n  function conditionRender() {\n    if (loading) {\n      return (\n        <LoadingBox>\n          <Loading />\n        </LoadingBox>\n      );\n    }\n    if (firstSearch && !artistAlbuns.length) {\n      return <EmptyBox>Nenhum álbum foi encontrado</EmptyBox>;\n    }\n    if (firstSearch && artistAlbuns.length) {\n      return (\n        <AlbunsBox>\n          <h3>{`Resultado de álbuns de: ${artist}`}</h3>\n          <div id=\"div-albuns\">\n            { artistAlbuns.map((album) => (\n              <Link\n                to={ `/album/${album.collectionId}` }\n                key={ album.collectionId }\n                data-testid={ `link-to-album-${album.collectionId}` }\n              >\n                <div id=\"div-cards\">\n                  <img\n                    src={ album.artworkUrl100 }\n                    alt={ album.collectionName }\n                  />\n                  <h4>{album.collectionName}</h4>\n                  <h5>{album.artistName}</h5>\n                </div>\n              </Link>\n            ))}\n          </div>\n        </AlbunsBox>\n      );\n    }\n  }\n\n  return (\n    <body data-testid=\"page-search\">\n      <Header page=\"search\" />\n      <Container>\n        <SearchBox id=\"search-div\">\n          <input\n            name=\"search-artist-input\"\n            type=\"text\"\n            data-testid=\"search-artist-input\"\n            placeholder=\"Nome do Artista\"\n            value={ inputValue }\n            onChange={ handleChange }\n          />\n          <button\n            type=\"button\"\n            data-testid=\"search-artist-button\"\n            disabled={ inputValue.length < 2 }\n            onClick={ handleClick }\n          >\n            Pesquisar\n          </button>\n        </SearchBox>\n        { conditionRender() }\n      </Container>\n    </body>\n  );\n}\n\nexport default Search;\n","import styled from 'styled-components';\n\nconst SongBox = styled.div`\n  border-top: 2px solid silver;\n  padding: 0 10px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n\n  div {\n    width: 50%;\n    display: flex;\n    justify-content: center;\n    color: rgb(38, 77, 38);\n    font-weight: bolder;\n  }\n`;\n\nexport default SongBox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SongBox from '../styles/musicCard';\n\nfunction MusicCard(props) {\n  const { song, handleCheckbox, favorites } = props;\n\n  return (\n    <SongBox key={ song.trackId } htmlFor={ song.trackId }>\n      <div>{ song.trackName }</div>\n      <audio\n        id={ song.trackId }\n        data-testid=\"audio-component\"\n        src={ song.previewUrl }\n        controls\n      >\n        <track kind=\"captions\" />\n        <code>audio</code>\n      </audio>\n      <label htmlFor=\"input-favorites\">\n        <input\n          id=\"input-favorites\"\n          type=\"checkbox\"\n          data-testid={ `checkbox-music-${song.trackId}` }\n          checked={ favorites.some((music) => music.trackId === song.trackId) }\n          onChange={ (event) => handleCheckbox(song, event) }\n        />\n      </label>\n    </SongBox>\n  );\n}\n\nMusicCard.propTypes = {\n  song: PropTypes.arrayOf.isRequired,\n  handleCheckbox: PropTypes.func.isRequired,\n  favorites: PropTypes.arrayOf.isRequired,\n};\n\nexport default MusicCard;\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import styled from 'styled-components';\n\nexport const PlayerBox = styled.main`\n  display: flex;\n  justify-content: center;\n  gap: 100px;\n  padding-top: 100px;\n`;\n\nexport const AlbumBox = styled.div`\n  color: rgb(38, 77, 38);\n\n  img {\n      width: 230px;\n      height: 230px;\n    }\n`;\n\nexport const SongsBox = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const LoadingBox = styled.div`\n  position: relative;\n  top: 250px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport getMusics from '../services/musicsAPI';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport { PlayerBox, AlbumBox, SongsBox, LoadingBox } from '../styles/album';\n\nfunction Album() {\n  const { id } = useParams();\n  const [album, setAlbum] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [favorites, setFavorites] = useState([]);\n\n  async function fetchMusic() {\n    const result = await getMusics(id);\n    setAlbum(result);\n  }\n\n  async function fetchFavorites() {\n    const result = await getFavoriteSongs();\n    setFavorites(result);\n  }\n\n  useEffect(() => {\n    fetchMusic();\n    fetchFavorites();\n  }, [favorites]);\n\n  async function addingSong(song) {\n    await addSong({\n      artistId: song.artistId,\n      artistName: song.artistName,\n      artistViewUrl: song.artistViewUrl,\n      artworkUrl30: song.artworkUrl30,\n      artworkUrl60: song.artworkUrl60,\n      artworkUrl100: song.artworkUrl100,\n      collectionCensoredName: song.collectionCensoredName,\n      collectionExplicitness: song.collectionExplicitness,\n      collectionId: song.collectionId,\n      collectionName: song.collectionName,\n      collectionPrice: song.collectionPrice,\n      collectionViewUrl: song.collectionViewUrl,\n      currency: song.currency,\n      discCount: song.discCount,\n      discNumber: song.discNumber,\n      isStreamable: song.isStreamable,\n      kind: song.kind,\n      previewUrl: song.previewUrl,\n      primaryGenreName: song.primaryGenreName,\n      releaseDate: song.releaseDate,\n      trackCensoredName: song.trackCensoredName,\n      trackCount: song.trackCount,\n      trackExplicitness: song.trackExplicitness,\n      trackId: song.trackId,\n      trackName: song.trackName,\n      trackNumber: song.trackNumber,\n      trackPrice: song.trackPrice,\n      trackTimeMillis: song.trackTimeMillis,\n      trackViewUrl: song.trackViewUrl,\n      wrapperType: song.wrapperType,\n    });\n  }\n\n  async function removingSong(song) {\n    await removeSong({\n      artistId: song.artistId,\n      artistName: song.artistName,\n      artistViewUrl: song.artistViewUrl,\n      artworkUrl30: song.artworkUrl30,\n      artworkUrl60: song.artworkUrl60,\n      artworkUrl100: song.artworkUrl100,\n      collectionCensoredName: song.collectionCensoredName,\n      collectionExplicitness: song.collectionExplicitness,\n      collectionId: song.collectionId,\n      collectionName: song.collectionName,\n      collectionPrice: song.collectionPrice,\n      collectionViewUrl: song.collectionViewUrl,\n      currency: song.currency,\n      discCount: song.discCount,\n      discNumber: song.discNumber,\n      isStreamable: song.isStreamable,\n      kind: song.kind,\n      previewUrl: song.previewUrl,\n      primaryGenreName: song.primaryGenreName,\n      releaseDate: song.releaseDate,\n      trackCensoredName: song.trackCensoredName,\n      trackCount: song.trackCount,\n      trackExplicitness: song.trackExplicitness,\n      trackId: song.trackId,\n      trackName: song.trackName,\n      trackNumber: song.trackNumber,\n      trackPrice: song.trackPrice,\n      trackTimeMillis: song.trackTimeMillis,\n      trackViewUrl: song.trackViewUrl,\n      wrapperType: song.wrapperType,\n    });\n  }\n\n  async function handleCheckbox(song, event) {\n    setLoading(true);\n    if (event.target.checked) {\n      await addingSong(song);\n    } else {\n      await removingSong(song);\n    }\n    setLoading(false);\n  }\n\n  return (\n    <body data-testid=\"page-album\">\n      <Header page=\"search\" />\n      {(album.length && !loading)\n        ? (\n          <PlayerBox>\n            <AlbumBox>\n              <img\n                src={ album[0].artworkUrl100 }\n                alt={ album[0].collectionName }\n              />\n              <h4 data-testid=\"album-name\">{ album[0].collectionName }</h4>\n              <h5 data-testid=\"artist-name\">{ album[0].artistName }</h5>\n            </AlbumBox>\n            <SongsBox>\n              {album.slice(1).map((song) => (<MusicCard\n                key={ song.trackId }\n                song={ song }\n                handleCheckbox={ handleCheckbox }\n                favorites={ favorites }\n              />))}\n            </SongsBox>\n          </PlayerBox>)\n        : (\n          <LoadingBox>\n            <Loading />\n          </LoadingBox>)}\n    </body>\n  );\n}\n\nexport default Album;\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  color: rgb(38, 77, 38);\n  align-items: center;\n\n  .song-div {\n    display: flex;\n    justify-content: space-between;\n    \n    \n    img {\n      width: 60px;\n      border-radius: 50%;\n    }\n  }\n\n  #main-div {\n    position: absolute;\n    top: 200px;    \n  }\n\n  h1 {\n    position: absolute;\n    top: 350px;\n  }\n`;\n\nexport const LoadingBox = styled.div`\n  position: relative;\n  top: 250px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import React, { useEffect, useState } from 'react';\nimport Header from '../components/Header';\nimport { getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport MusicCard from '../components/MusicCard';\nimport { Main, LoadingBox } from '../styles/favorites';\nimport Loading from '../components/Loading';\n\nfunction Favorites() {\n  const [favorites, setFavorites] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  async function fetchFavorites() {\n    const result = await getFavoriteSongs();\n    setFavorites(result);\n  }\n\n  useEffect(() => {\n    fetchFavorites();\n  }, [favorites]);\n\n  async function handleCheckbox(song) {\n    setLoading(true);\n    await removeSong({\n      artistId: song.artistId,\n      artistName: song.artistName,\n      artistViewUrl: song.artistViewUrl,\n      artworkUrl30: song.artworkUrl30,\n      artworkUrl60: song.artworkUrl60,\n      artworkUrl100: song.artworkUrl100,\n      collectionCensoredName: song.collectionCensoredName,\n      collectionExplicitness: song.collectionExplicitness,\n      collectionId: song.collectionId,\n      collectionName: song.collectionName,\n      collectionPrice: song.collectionPrice,\n      collectionViewUrl: song.collectionViewUrl,\n      currency: song.currency,\n      discCount: song.discCount,\n      discNumber: song.discNumber,\n      isStreamable: song.isStreamable,\n      kind: song.kind,\n      previewUrl: song.previewUrl,\n      primaryGenreName: song.primaryGenreName,\n      releaseDate: song.releaseDate,\n      trackCensoredName: song.trackCensoredName,\n      trackCount: song.trackCount,\n      trackExplicitness: song.trackExplicitness,\n      trackId: song.trackId,\n      trackName: song.trackName,\n      trackNumber: song.trackNumber,\n      trackPrice: song.trackPrice,\n      trackTimeMillis: song.trackTimeMillis,\n      trackViewUrl: song.trackViewUrl,\n      wrapperType: song.wrapperType,\n    });\n    setLoading(false);\n  }\n\n  function renderCondition() {\n    if (loading) {\n      return (\n        <LoadingBox>\n          <Loading />\n        </LoadingBox>\n      );\n    }\n    if (favorites.length && !loading) {\n      return (\n        <Main>\n          <div id=\"main-div\">\n            <h3>Músicas Favoritas:</h3>\n            <div>\n              {favorites.map((song) => (\n                <div key={ song.trackId } className=\"song-div\">\n                  <img src={ song.artworkUrl100 } alt={ song.artistName } />\n                  <MusicCard\n                    song={ song }\n                    favorites={ favorites }\n                    handleCheckbox={ () => handleCheckbox(song) }\n                  />\n                </div>))}\n            </div>\n          </div>\n        </Main>);\n    }\n    if (!favorites.length && !loading) {\n      return (\n        <Main>\n          <h1>You do not have favorites songs yet</h1>\n        </Main>);\n    }\n  }\n\n  return (\n    <body data-testid=\"page-favorites\">\n      <Header page=\"favorites\" />\n      { renderCondition() }\n    </body>\n  );\n}\n\nexport default Favorites;\n","import styled from 'styled-components';\n\nexport const Main = styled.main`\n  display: flex;\n  justify-content: center;\n  color: rgb(38, 77, 38);\n\n`;\n\nexport const Card = styled.div`\n  position: absolute;\n  top: 250px;\n  width: 25%;\n\n  #div-img {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    \n    a:-webkit-any-link {\n      color: -webkit-link;\n      cursor: pointer;\n      text-decoration: none;\n      border: 1px solid blue;\n      box-sizing: content-box;\n      padding: 1px 4px;\n      font-size: smaller;\n    }\n\n\n  }\n\n  h4 {\n    margin-bottom: 5px;\n    font-weight: bolder;\n  }\n\n  p {\n    margin-top: 0px;\n  }\n\n  p:last-child {\n    height: 100px;\n    display: flex;\n    flex-direction: wrap;\n  }\n`;\n\nexport const LoadingBox = styled.div`\n  position: relative;\n  top: 250px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { getUser } from '../services/userAPI';\nimport { Card, Main, LoadingBox } from '../styles/profile';\nimport Loading from '../components/Loading';\n\nfunction Profile() {\n  const [user, setUser] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  async function fetchUser() {\n    setLoading(true);\n    const result = await getUser();\n    setUser(result);\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    fetchUser();\n  }, []);\n\n  return (\n    <body data-testid=\"page-profile\">\n      <Header page=\"profile\" />\n      <Main>\n        { loading\n          ? (\n            <LoadingBox>\n              <Loading />\n            </LoadingBox>)\n          : (\n            <Card>\n              <div id=\"div-img\">\n                <img src={ user.image } alt={ user.name } data-testid=\"profile-image\" />\n                <Link to=\"/profile/edit\" id=\"link\">Editar perfil</Link>\n              </div>\n              <div>\n                <h4>Nome</h4>\n                <p>{user.name}</p>\n                <h4>E-mail</h4>\n                <p>{user.email}</p>\n                <h4>Description</h4>\n                <p>{user.description}</p>\n              </div>\n            </Card>)}\n      </Main>\n    </body>\n  );\n}\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { createUser } from '../services/userAPI';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport { Container, Main, LoadingBox } from '../styles/login';\n\nfunction ProfileEdit() {\n  const minNameLength = 3;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [image, setImage] = useState('');\n  const [description, setDescription] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [autentification, setAutentification] = useState(false);\n\n  function handleName(event) {\n    setName(event.target.value);\n  }\n\n  function handleEmail(event) {\n    setEmail(event.target.value);\n  }\n\n  function handleImage(event) {\n    setImage(event.target.value);\n  }\n\n  function handleDescription(event) {\n    setDescription(event.target.value);\n  }\n\n  async function handleClick() {\n    setLoading(true);\n    await createUser({ name, email, image, description });\n    setLoading(false);\n    setAutentification(true);\n  }\n\n  if (autentification) {\n    return (\n      <Redirect to=\"/profile\" />\n    );\n  }\n\n  return (\n    <body data-testid=\"page-login\">\n      <Header page=\"profile\" />\n      {loading\n        ? (\n          <LoadingBox>\n            <Loading />\n          </LoadingBox>)\n        : (\n          <Container>\n            <Main>\n              <div>\n                <h6>Username</h6>\n                <input\n                  name=\"name\"\n                  id=\"name\"\n                  type=\"text\"\n                  data-testid=\"login-name-input\"\n                  onChange={ handleName }\n                />\n              </div>\n              <div>\n                <h6>E-mail</h6>\n                <input\n                  name=\"email\"\n                  type=\"email\"\n                  data-testid=\"login-email-input\"\n                  onChange={ handleEmail }\n                />\n              </div>\n              <div>\n                <h6>Photo</h6>\n                <input\n                  name=\"image\"\n                  type=\"text\"\n                  data-testid=\"login-image-input\"\n                  onChange={ handleImage }\n                />\n              </div>\n              <div id=\"div-description\">\n                <h6>Description</h6>\n                <textarea\n                  name=\"description\"\n                  data-testid=\"login-text-area\"\n                  maxLength=\"200\"\n                  onChange={ handleDescription }\n                />\n              </div>\n              <button\n                type=\"button\"\n                data-testid=\"login-submit-button\"\n                disabled={ name.length < minNameLength }\n                onClick={ handleClick }\n              >\n                Enter\n              </button>\n            </Main>\n          </Container>)}\n    </body>\n  );\n}\n\nexport default ProfileEdit;\n","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div data-testid=\"page-not-found\">\n      <p>Eu sou NotFound</p>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './pages/Login';\nimport Search from './pages/Search';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Profile from './pages/Profile';\nimport ProfileEdit from './pages/ProfileEdit';\nimport NotFound from './pages/NotFound';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Home } />\n      <Route path=\"/search\" component={ Search } />\n      <Route path=\"/album/:id\" component={ Album } />\n      <Route path=\"/favorites\" component={ Favorites } />\n      <Route path=\"/profile/edit\" component={ ProfileEdit } />\n      <Route path=\"/profile\" component={ Profile } />\n      <Route path=\"*\" component={ NotFound } />\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}